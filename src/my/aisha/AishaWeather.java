/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.aisha;
import com.github.prominence.openweathermap.api.OpenWeatherMapManager;
import com.github.prominence.openweathermap.api.WeatherRequester;
import com.github.prominence.openweathermap.api.constants.Accuracy;
import com.github.prominence.openweathermap.api.constants.Language;
import com.github.prominence.openweathermap.api.constants.Unit;
import com.github.prominence.openweathermap.api.exception.DataNotFoundException;
import com.github.prominence.openweathermap.api.exception.InvalidAuthTokenException;
import com.github.prominence.openweathermap.api.model.response.Weather;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Ajay
 */
public class AishaWeather extends javax.swing.JFrame {

    /**
     * Creates new form AishaWeather
     */
    Weather weatherResponse;
    OpenWeatherMapManager openWeatherManager;
    WeatherRequester weatherRequester;
    
    public AishaWeather() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tempLabel = new javax.swing.JLabel();
        headerLabel = new javax.swing.JLabel();
        headerLabel1 = new javax.swing.JLabel();
        weatherInfoTitle = new javax.swing.JLabel();
        tempInfoLabel = new javax.swing.JLabel();
        minTempLabel = new javax.swing.JLabel();
        maxTempLabel = new javax.swing.JLabel();
        weatherInfo = new javax.swing.JLabel();
        headerIconLabel1 = new javax.swing.JLabel();
        headerTempDescLabel = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forecast");
        setMinimumSize(new java.awt.Dimension(1200, 600));
        setPreferredSize(new java.awt.Dimension(1200, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tempLabel.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 48)); // NOI18N
        tempLabel.setForeground(new java.awt.Color(255, 255, 255));
        tempLabel.setText(myTemp("Delhi"));
        getContentPane().add(tempLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, -1, -1));

        headerLabel.setFont(new java.awt.Font("Times New Roman", 0, 26)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(255, 255, 255));
        headerLabel.setText(getMyCity());
        getContentPane().add(headerLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 150, 60));

        headerLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        headerLabel1.setForeground(new java.awt.Color(255, 255, 255));
        headerLabel1.setText(myTempDate());
        getContentPane().add(headerLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 380, 40));

        weatherInfoTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        weatherInfoTitle.setForeground(new java.awt.Color(255, 255, 255));
        weatherInfoTitle.setText("Today's Weather Info ");
        getContentPane().add(weatherInfoTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        String str[]=getAllWeatherInfo();
        tempInfoLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        tempInfoLabel.setForeground(new java.awt.Color(255, 255, 255));
        tempInfoLabel.setText(str[0]);
        getContentPane().add(tempInfoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 280, 50));

        minTempLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        minTempLabel.setForeground(new java.awt.Color(255, 255, 255));
        minTempLabel.setText(str[1]);
        getContentPane().add(minTempLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        maxTempLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        maxTempLabel.setForeground(new java.awt.Color(255, 255, 255));
        maxTempLabel.setText(str[2]);
        getContentPane().add(maxTempLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, -1, -1));

        if(myWeatherInfo().equalsIgnoreCase("haze"));
        {
            weatherInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/aisha/images/PartilyCloud.png")));
        }
        getContentPane().add(weatherInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, -1, -1));

        headerIconLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/aisha/images/weather.png"))); // NOI18N
        headerIconLabel1.setText("jLabel6");
        getContentPane().add(headerIconLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 160, 160));

        headerTempDescLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        headerTempDescLabel.setForeground(new java.awt.Color(255, 255, 255));
        headerTempDescLabel.setText(myWeatherInfo());
        getContentPane().add(headerTempDescLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, -1, -1));

        backgroundLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        backgroundLabel.setForeground(new java.awt.Color(255, 255, 255));
        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/aisha/images/Weather_1.jpg"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 0, 1320, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String myTemp(String str)
    {
        try {
                openWeatherManager = new OpenWeatherMapManager("f4df9c1aed9db5ffc8bb586450e8a36f");
                weatherRequester = openWeatherManager.getWeatherRequester();

                weatherResponse = weatherRequester.setLanguage(Language.ENGLISH)
                    .setUnitSystem(Unit.METRIC_SYSTEM)
                    .setAccuracy(Accuracy.ACCURATE)
                    .getByCityName(str);           
        } catch (InvalidAuthTokenException | DataNotFoundException ex) {
            Logger.getLogger(Test11.class.getName()).log(Level.SEVERE, null, ex);
        } 
        String unit=String.valueOf(weatherResponse.getTemperatureUnit()); 
       String temp= String.valueOf(weatherResponse.getTemperature()) ;
       return temp+" "+unit; 
    }
    
    public String myWeatherInfo()
    {      
       String info=String.valueOf(weatherResponse.getWeatherDescription());
        
        return info;        
    }
    public String getMyCity()
    {       
        String city=weatherResponse.getCityName();
        String country=weatherResponse.getCountry();
        return city+", "+country;        
    }
    public String myTempDate()
    {
        return weatherResponse.getDataCalculationDate().toString();
    }
    
    public String[] getAllWeatherInfo()
    {
       String str=weatherResponse.getWeatherInfo().toString(); 
       String str1[]=str.split(";");
       return str1;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AishaWeather.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AishaWeather.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AishaWeather.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AishaWeather.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AishaWeather().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JLabel headerIconLabel1;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JLabel headerLabel1;
    private javax.swing.JLabel headerTempDescLabel;
    private javax.swing.JLabel maxTempLabel;
    private javax.swing.JLabel minTempLabel;
    private javax.swing.JLabel tempInfoLabel;
    private javax.swing.JLabel tempLabel;
    private javax.swing.JLabel weatherInfo;
    private javax.swing.JLabel weatherInfoTitle;
    // End of variables declaration//GEN-END:variables
}
